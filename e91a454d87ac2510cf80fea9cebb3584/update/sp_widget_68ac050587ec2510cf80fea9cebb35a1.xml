<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>custom</category>
        <client_script><![CDATA[api.controller=function($scope) {
	var c = this;

	$scope.review=false;
	$scope.quizSubmitted=false;

	var examSetDetails = c.data.examSet;
		$scope.examSetCode=examSetDetails["code"];
	$scope.examSetName=examSetDetails["name"];
	$scope.examSetDescription=examSetDetails["description"];

	var itemsDetails = c.data.questions;
	
	$scope.questionsList = itemsDetails.questions;

	$scope.curPage = 1;
	$scope.itemsPerPage = 1;
	$scope.maxSize = 5;
	$scope.showAnswerTrue = false;
	$scope.totalQuestions = itemsDetails.questions.length;

	$scope.numOfPages = function () {
		return Math.ceil( itemsDetails.questions.length / $scope.itemsPerPage );
	};

	$scope.$watch( 'curPage + numPerPage', function () {
		$scope.showAnswerTrue = false;
		var begin = ( ( $scope.curPage - 1 ) * $scope.itemsPerPage ),
				end = begin + $scope.itemsPerPage;
		$scope.filteredItems = itemsDetails.questions.slice( begin, end );
	} );

	$scope.showAnswer = function () {
		$scope.showAnswerTrue = true;
		$scope.filteredItems = itemsDetails.questions;
		$scope.review=false;
		$scope.quizSubmitted=true;
	};

	$scope.onSelect = function ( question, option ) {
		if ( question.QuestionTypeId == 1 || question.QuestionTypeId == 2) {
			question.Options.forEach( function ( element) {
				if ( element.Id != option.Id ) {
					element.Selected = false;
				}
			} );
		}
	};

	$scope.toBool = function (val) {
		if (val == 'undefined' || val == null || val == '' || val == 'false' || val == 'False')
			return false;
		else if (val == true || val == 'true' || val == 'True')
			return true;
		else
			return 'unidentified';
	};
	$scope.isCorrect = function ( question ) {
		var result = 'You got it right!';
		question.Options.forEach( function ( option) {
			if ( $scope.toBool( option.Selected ) != option.IsAnswer ) {
				result = 'Sorry, that\'s not quite right!';
				return false;
			}
		} );
		return result;
	};

	$scope.isAnswered = function ( index ) {
		var answered = 'Not Answered';
		$scope.questionsList[ index ].Options.forEach( function ( element ) {
			if ( element.Selected == true ) {
				answered = 'Answered';
				return false;
			}
		} );
		return answered;
	};

	$scope.goTo = function ( index ) {
		if ( index > 0 && index <= $scope.totalQuestions ) {
			$scope.curPage = index;
			$scope.review=false;
		}
	};







};]]></client_script>
        <controller_as>c</controller_as>
        <css>.ta-editor {
  min-height: 100px;
  height: auto;
  overflow: auto;
  font-family: inherit;
  font-size: 100%;
}

.bd-placeholder-img {
  font-size: 1.125rem;
  text-anchor: middle;
  -webkit-user-select: none;
  -moz-user-select: none;
  user-select: none;
}

@media (min-width: 768px) {
  .bd-placeholder-img-lg {
    font-size: 3.5rem;
  }
}

.b-example-divider {
  height: 3rem;
  background-color: rgba(0, 0, 0, .1);
  border: solid rgba(0, 0, 0, .15);
  border-width: 1px 0;
  box-shadow: inset 0 .5em 1.5em rgba(0, 0, 0, .1), inset 0 .125em .5em rgba(0, 0, 0, .15);
}

.b-example-vr {
  flex-shrink: 0;
  width: 1.5rem;
  height: 100vh;
}

.bi {
  vertical-align: -.125em;
  fill: currentColor;
}

.nav-scroller {
  position: relative;
  z-index: 2;
  height: 2.75rem;
  overflow-y: hidden;
}

.nav-scroller .nav {
  display: flex;
  flex-wrap: nowrap;
  padding-bottom: 1rem;
  margin-top: -1px;
  overflow-x: auto;
  text-align: center;
  white-space: nowrap;
  -webkit-overflow-scrolling: touch;
}

.answered {
  background-color:#ccffcc;
  border:1px solid #aaeeaa;
  padding:12px;
  margin: 10px;
}

.not-answered {
  background-color:#ffcccc;
  border:1px solid #eeaaaa;
  padding:12px;
  margin: 10px;
}</css>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>true</has_preview>
        <id>quiz</id>
        <internal>false</internal>
        <link><![CDATA[function link(scope, element, attrs, controller) {  }]]></link>
        <name>Quiz</name>
        <option_schema/>
        <public>false</public>
        <roles/>
        <script><![CDATA[(function() {
	
	//Get Exam Set SysID
	var examSetSysID = $sp.getParameter('exam_set');
	
	if(!examSetSysID||examSetSysID=="undefined"){
		//Show not found error (404)
		data.examSetExist=false;
	}else{
		data.examSetExist=true;
	}
	
	//Get Exam Set Details
	data.examSet = {};
	var examSetGr = new GlideRecord('x_845446_practicen_exam_sets');
	examSetGr.get(examSetSysID);
	$sp.getRecordDisplayValues(data.examSet, examSetGr, 'sys_id,name,code,description');
	
	
	data.questions={
		"questions": []
	};
	
	var question = {};
	var questionGr = new GlideRecord('x_845446_practicen_question_bank');
	questionGr.addEncodedQuery("exam_set="+examSetSysID);
	questionGr.orderBy("id");
	questionGr.query();
	while(questionGr.next()){
		question = {};
		question["QuestionTypeId"]=questionGr.getValue("type");
		question["Id"]=questionGr.getValue("id");
		question["Name"]=questionGr.getValue("question");
		question["explaination"]=questionGr.getValue("explaination");
		question["Options"]=getQueOptions(questionGr.getUniqueValue());
		
		data.questions.questions.push(question);
	}
	
	function getQueOptions(questionSysID){
		var optionArray=[];

		var option={};
		var optionGr = new GlideRecord('x_845446_practicen_question_options');
		optionGr.addEncodedQuery("question="+questionSysID);
		optionGr.orderBy("id");
		optionGr.query();
		while(optionGr.next()){
			option = {};
			option["IsAnswer"]=optionGr.getValue("is_answer");
			option["Id"]=optionGr.getValue("id");
			option["Name"]=optionGr.getValue("option");
	
			optionArray.push(option);
		}
		return optionArray;
	}
	

})();]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2023-01-20 16:45:31</sys_created_on>
        <sys_id>68ac050587ec2510cf80fea9cebb35a1</sys_id>
        <sys_name>Quiz</sys_name>
        <sys_package display_value="PracticeNow" source="x_845446_practicen">e91a454d87ac2510cf80fea9cebb3584</sys_package>
        <sys_policy/>
        <sys_scope display_value="PracticeNow">e91a454d87ac2510cf80fea9cebb3584</sys_scope>
        <sys_update_name>sp_widget_68ac050587ec2510cf80fea9cebb35a1</sys_update_name>
        <template><![CDATA[<main class="px-3">
  <div ng-if="!c.data.examSetExist">
    <h5>
      Exam not found.
    </h5>
  </div>
  <div ng-if="c.data.examSetExist" class="container">
    <div class="row">
      <div class="col-12" style="text-align: center;">
        <h1>{{examSetName}}</h1>
        <h3>( {{examSetCode}} )</h3>
      </div>
    </div>
    <div class="row">
      <div class="col-12">
        <label ng-show="!showAnswerTrue" >Current Que: </label><input ng-show="!showAnswerTrue" type="number" min="1" max="totalQuestions" ng-model="curPage" /><span ng-show="!showAnswerTrue" style="text-align: center;vertical-align: top;"> of {{totalQuestions}}</span>
        <hr />
      </div>
    </div>


    <div class="row">        
      <div class="col-12" ng-show="review!=true">

        <div ng-repeat="itilQue in filteredItems">

          <div class="shadow-1-strong" >
            <span style="font-weight: bold;">Que. {{itilQue["Id"]}}) </span><span ta-bind="text" ng-model="itilQue['Name']" ta-readonly='disabled'></span>
          </div>
          <ol type="A">
            <div ng-repeat="option in itilQue['Options']">

              <label for="{{option.Id}}">
                <input id="{{option.Id}}" type="checkbox" ng-model="option.Selected" ng-change="onSelect(itilQue, option);" ng-disabled="quizSubmitted"/>
                <li style="display:inline-block; vertical-align: middle;">{{option.Name}}</li></label>
            </div>

          </ol>


          <br />


          <!-- <footer> -->
          <footer ng-show="showAnswerTrue" class="alert {{ isCorrect(itilQue) == 'You got it right!'? 'alert-success': 'alert-danger'}}">
            {{isCorrect(itilQue)}}
          </footer>
          <footer ng-show="showAnswerTrue">
            <h6>Explaination</h6>
            <div style="color: rgb(63, 9, 225);" ta-bind="text" ng-model="itilQue['explaination']" ta-readonly='disabled'></div>     
            <hr />
          </footer>

        </div>


        <div ng-show="!showAnswerTrue" style="display: flex; align-items: center; justify-content: center;" data-pagination=""
             data-num-pages="numOfPages()"
             data-current-page="curPage"
             data-max-size="maxSize"
             data-boundary-links="true"
             previous-text="‹" 
             next-text="›" 
             first-text="«" 
             last-text="»"
             >
        </div>

        <div ng-show="showAnswerTrue" style="display: flex; align-items: center; justify-content: center;">
          <h6 style="color: green;">You may close this window now.</h6>
        </div>
      </div>
      <!-- Review block -->
      <div ng-show="review==true" class="col-12">  
        <span ng-repeat="question in questionsList">
          <span style="display: inline-block;" ng-click="goTo($index + 1)" class="{{ isAnswered($index) == 'Answered'? 'answered': 'not-answered' }}">{{$index + 1}}. {{ isAnswered($index) }}</span>
        </span>

      </div>
    </div>
    <div class="row">
      <div class="col-12">
        <div ng-show="!showAnswerTrue" style="display: flex; align-items: center; justify-content: center;">
          <input style="margin:10px;" type="submit" class="btn btn-info btn-sm" value="Review" ng-click="review=true" ng-show="review!=true"/>
          <input style="margin:10px;" type="submit" class="btn btn-info btn-sm" value="Hide Review" ng-click="review=false" ng-show="review==true"/>
          <input style="margin:10px;" type="submit" class="btn btn-info btn-sm" value="Submit" ng-click="showAnswer()" />
        </div>
      </div>
    </div>
  </div>


</main>]]></template>
    </sp_widget>
</record_update>
