<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_header_footer">
    <sp_header_footer action="INSERT_OR_UPDATE">
        <category>custom</category>
        <client_script><![CDATA[function ($rootScope, $scope, snRecordWatcher, spUtil, $location, $uibModal, cabrillo, $timeout, $window, i18n) {

	$scope.logoText = i18n.format(i18n.getMessage('Go to {0} Homepage'), $scope.portal.title);



	$scope.openPopUp = function() {
		var url = "$chat_support.do?queueID=" + $scope.data.connect_support_queue_id;
		var popup = window.open (url, "popup", "width=900, height=600");
	};

	$scope.openLogin = function () {
		$scope.modalInstance = $uibModal.open({
			templateUrl: 'modalLoginPracticeNow',
			scope: $scope
		});

		var pageRoot = angular.element('.sp-page-root');
		$scope.modalInstance.rendered.then(function() {
			var $uibModalStack = $injector.get('$uibModalStack');
			var modalObj = $uibModalStack.getTop();
			var modal = modalObj.value.modalDomEl;

			modal.attr('aria-label', modal.find('.panel-title').html());
			modal.attr('aria-modal', 'true');
			pageRoot.attr('aria-hidden', 'true');
		});

		$scope.modalInstance.closed.then(function() {
			pageRoot.attr('aria-hidden', 'false');
		});
	};

	var smScreenSize = isSMScreenSize();
	$scope.showSMAvatar = isSMScreenSize();
	$scope.showAvatar = !isSMScreenSize();





	function isSMScreenSize() {
		return $window.matchMedia('(max-width: 992px)').matches;
	}



	$scope.isHomepage = function() {
		if (!$scope.page.id)
			return true;

		if ($scope.page.id == $scope.portal.homepage_dv)
			return true;

		return false;
	};
}
		]]></client_script>
        <controller_as>c</controller_as>
        <css>.navbar {&#13;
  transition: 250ms opacity ease-in-out;&#13;
  -webkit-transition: 250ms opacity ease-in-out;&#13;
  border: 0;&#13;
  border-bottom: 4px solid $sp-navbar-divider-color;&#13;
}&#13;
&#13;
.navbar-fade {&#13;
  opacity: 0.4;&#13;
}&#13;
&#13;
.navbar-inverse .navbar-toggle {&#13;
  border-color: rgba(255, 255, 255, 0.25);&#13;
}&#13;
&#13;
header[role="banner"],&#13;
.nav &gt; li &gt; a {&#13;
  max-height: 60px;&#13;
}&#13;
&#13;
.nav &gt; li &gt; a span.fa{&#13;
  margin-left: 0.2rem;&#13;
}&#13;
&#13;
@media screen and (max-width: 992px){&#13;
  .nav &gt; li &gt; a {&#13;
    padding-right: 0.5rem;&#13;
    padding-left: 0.5rem;&#13;
  }&#13;
}&#13;
&#13;
.navbar-brand {&#13;
  max-height: 60px;&#13;
  padding: 0;&#13;
  padding-bottom: 0.5rem;&#13;
}&#13;
&#13;
.navbar-brand img, .navbar-brand span {&#13;
  margin-left: $sp-logo-margin-x;&#13;
  margin-right: $sp-logo-margin-x;&#13;
  margin-top: $sp-logo-margin-y;&#13;
  margin-bottom: $sp-logo-margin-y;&#13;
  display: block;&#13;
  max-height: $sp-logo-max-height;&#13;
  max-width: $sp-logo-max-width;&#13;
  position: relative;&#13;
  top: 50%;&#13;
  -webkit-transform: translateY(-50%);&#13;
  -ms-transform: translateY(-50%);&#13;
  transform: translateY(-50%);&#13;
  overflow: hidden;&#13;
}&#13;
&#13;
@media screen and (max-width: 992px){&#13;
  .navbar-brand img, .navbar-brand span {&#13;
    max-width: $sp-logo-mobile-max-width;&#13;
  }&#13;
}&#13;
&#13;
.breadcrumb-container {&#13;
  background-color: $panel-bg;&#13;
}&#13;
&#13;
/* for mobile app */&#13;
.navbar-inverse.is-native {&#13;
  background-color: #405060;&#13;
}&#13;
&#13;
nav {&#13;
  margin-bottom: 0px;&#13;
  border-radius: 0px;&#13;
&#13;
 .toggle-dropdown {&#13;
    height: 60px;&#13;
  }&#13;
&#13;
}&#13;
&#13;
.navbar-right {&#13;
  padding-right: 0px;&#13;
  padding-left: 7px;&#13;
}&#13;
&#13;
.navbar-nav {&#13;
margin: 0px;&#13;
}&#13;
&#13;
// PRB711244: Dropdown menu is scrollable when too many items&#13;
.scrollable-dropdown {&#13;
  max-height: 80vh;&#13;
  overflow: auto;&#13;
  height: auto;&#13;
}&#13;
&#13;
.is-native {&#13;
 .scrollable-dropdown {&#13;
  max-height: 100vh;&#13;
  overflow: scroll;&#13;
  height: auto;&#13;
	}&#13;
}&#13;
&#13;
&#13;
/* PRB923910: Fix for Service Portal - Header Poorly Aligned in Safari */&#13;
@media screen and (min-width: 993px) {&#13;
  .navbar-right {&#13;
    display: flex !important;&#13;
    height: auto !important;&#13;
  }&#13;
}&#13;
&#13;
@media (max-width: 992px) {&#13;
  .navbar-toggle {&#13;
    display: block;&#13;
  }&#13;
  .navbar-header {&#13;
    float: none;&#13;
  }&#13;
  .navbar-left,.navbar-right {&#13;
    float: none !important;&#13;
  }&#13;
  .navbar-nav {&#13;
    float: none !important;&#13;
  }&#13;
  .navbar-nav &gt; li {&#13;
    float: none;&#13;
  }&#13;
  .navbar-nav &gt; li &gt; a {&#13;
    padding-top: 1rem ;&#13;
    padding-bottom: 1rem;&#13;
  }&#13;
}</css>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>false</has_preview>
        <id/>
        <internal>false</internal>
        <link><![CDATA[function(scope, element) {
	var prevFocusIndex = -1;// This is used for prev focus of nav-bar(avatar) drop down items when its visible.
	$(document).keyup(function(event) {
		if (event.which == 9 || event.which == 37 || event.which == 39) { //tab key handler + arrow keys
			if ($(event.target).parents(".dropdown-menu").length == 0) { //if we are NOT inside a dropdown...
				//close the dropdowns
				$(".dropdown").removeClass("open");
				$("[data-toggle='dropdown']").attr("aria-expanded", "false");
				prevFocusIndex = -1;
			}
		} else if(event.which == 38 || event.which == 40) {
			var parent = $(event.target).parents('.dropdown-menu');
			
			// To support custom drop downs like cart and wish list.
			if (parent.hasClass('custom-drop-down')) return;
			
			if (parent.length) {
				var items = $(parent).find('li a, li button');
				if (!items.length)
					return;

				var index = items.index(items.filter(':focus'));
				if(index == -1) return;
				
				if (prevFocusIndex == index) {
					if (index == 0)
						index = items.length - 1;
					else if (index == items.length - 1)
						index = 0;
						
						items[index].focus();
				} else if (event.which == 38 && index == 0 && prevFocusIndex == -1) { // to handle newly opened dropdown on keyup
					index = items.length - 1;
					items[index].focus();
				}
				prevFocusIndex = index;
			
			} else {
				// Upon down/up arrow key event from the menu target element,
        // focus the first/last menu item to be consistent with click behavior and conform to standard menubar pattern below
				// https://www.w3.org/TR/wai-aria-practices/examples/menubar/menubar-1/menubar-1.html
				if ($(event.target).is('[data-toggle="dropdown"]')) {
					var parent = $(event.target).parent().find('.dropdown-menu');
					
					// To support custom drop downs like cart and wish list.
					if (parent.hasClass('custom-drop-down')) return;
					
					var items = $(parent).find('li a, li button');
					if (!items.length) return;
					
					var index = -1;
					if(event.which == 40) //down
						index = 0;
					else if(event.which == 38) //up
						index = items.length > 0 ? items.length-1 : 0;
					
					items[index].focus();
					prevFocusIndex = index;
					
				}		
			}
		}
		// on esc/close of the menu, reset the index
		if(event.which == 27)
			prevFocusIndex = -1;
		
		if (event.which == 13 || event.which == 32)
			$(event.target).parent(".dropdown.open").find("ul.dropdown-menu li:first-child a").focus();
	});

	$(element).on('click.nav','.navbar-collapse.in',function(e) {
		var target = $(e.target);
		if (target.is('a')) {
			if (target.hasClass('sp-menu-has-items'))
				return; // menu item has a submenu, so just toggle it

			// collapse mobile nav if clicked an anchor
			$(this).removeClass('in').addClass('collapse');
			return;
		}

		if (target.parent().hasClass("toggle-dropdown")) {
			// collapse mobile nav if parent has toggle-dropdown class
			$(this).removeClass('in').addClass('collapse');
			return;
		}

		// if neither target nor parent is an anchor, do nothing
		if (!target.parent().is('a'))
			return;

		// collapse mobile nav if target is part of a submenu
		if (target.parents("ul.dropdown-menu").length > 0)
			$(this).removeClass('in').addClass('collapse');
	});
}]]></link>
        <name>PracticeNow Header</name>
        <option_schema/>
        <public>true</public>
        <roles/>
        <script><![CDATA[data.login_page = $sp.getValue('login_page');
var menu = $sp.getValue("sp_rectangle_menu");
data.menu = $sp.getWidgetFromInstance(menu);


if (data.menu && data.menu.data) {
	data.menu.data.replace = true;
	// Hide login if menu already has link to login
	data.hasLogin = false;
	if (data.menu.data.menu.items) {
		data.hasMenuItems = data.menu.data.menu.items.length > 0;
		for(var i in data.menu.data.menu.items) {
			var item = data.menu.data.menu.items[i];
			if (item.type == 'page' && item.sp_page == data.login_page)
				data.hasLogin = true;
		}
	}
}

data.loginWidget = $sp.getWidgetFromInstance('login-modal');]]></script>
        <servicenow>false</servicenow>
        <static>false</static>
        <sys_class_name>sp_header_footer</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2023-02-26 09:11:03</sys_created_on>
        <sys_id>fae642f087552110cf80fea9cebb35db</sys_id>
        <sys_mod_count>9</sys_mod_count>
        <sys_name>PracticeNow Header</sys_name>
        <sys_package display_value="PracticeNow" source="x_845446_practicen">e91a454d87ac2510cf80fea9cebb3584</sys_package>
        <sys_policy/>
        <sys_scope display_value="PracticeNow">e91a454d87ac2510cf80fea9cebb3584</sys_scope>
        <sys_update_name>sp_header_footer_fae642f087552110cf80fea9cebb35db</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2023-02-26 09:40:53</sys_updated_on>
        <template><![CDATA[<div>
  <nav class="navbar-inverse" ng-class="::{'navbar':!isViewNative, 'is-native': isViewNative}"
       role="navigation" aria-label="${Primary}">
    <div ng-show="::!isViewNative" class="navbar-header">
      <a class="navbar-brand" ng-if="::!portal.logo" href="?id={{::portal.homepage_dv}}"><span ng-bind="portal.title"></span></a>
      <a class="navbar-brand navbar-brand-logo" ng-if="::portal.logo" ng-href="?id={{::portal.homepage_dv}}" ng-click="collapse()" aria-label="{{::logoText}}">
        <img ng-src="{{::portal.logo}}" title="{{::portal.title}}" role="presentation" alt="{{::portal.title}} ${Logo}" />
      </a>
      <button ng-if="data.hasMenuItems || (!user.logged_in && page.id != portal.login_page_dv && !data.hasLogin) || user.logged_in" type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#sp-nav-bar" aria-haspopup="menu">
        <span class="sr-only">${Toggle navigation}</span>
        <span class="icon-bar"></span>
        <span class="icon-bar"></span>
        <span class="icon-bar"></span>
      </button>
    </div>

    <div sp-navbar-toggle="" class="collapse navbar-right" id="sp-nav-bar">
      <!-- Include The Menu -->
      <sp-widget widget="::data.menu"></sp-widget>

    </div>
  </nav>
</div>]]></template>
    </sp_header_footer>
</record_update>
